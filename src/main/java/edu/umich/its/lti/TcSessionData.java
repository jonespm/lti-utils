package edu.umich.its.lti;

/* Store information for the LTI Tool consumer that will be required for future
   conversations. Most information is from the consumer but the oauth credentials are local.
 */

import java.util.HashMap;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;

import lombok.Getter;
import lombok.Setter;
import lombok.Data;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import edu.umich.its.lti.utils.OauthCredentials;

/**
 *
 * @author ranaseef, dlhaines
 *
 */

/******** Use lombok for boilerplate code *********/
@Data
public class TcSessionData {

	private static Log M_log = LogFactory.getLog(TcSessionData.class);

	private final String id = UUID.randomUUID().toString();
	private String contextId;
	private String contextLabel;
	private String contextTitle;
	private String membershipsId;
	private String membershipsUrl;
	private String resourceLinkId;
	private String userEmailAddress;
	private String userId;
	private String userImageUrl;
	private String userNameFull;
	private String userRoles;
	private String settingId;
	private String locale;
	private String customBrand;
	private HashMap<String, Object> customValuesMap;
   
	@Getter @Setter
	private String settingUrl;
   
	@Getter @Setter
	private String setting;
   
	@Getter @Setter
	private OauthCredentials oauthCredentials;
   
	// userRoleArray is generated by userRoles
	private String[] userRoleArray;
	private String userSourceDid;

	// Constructors -------------------------------------------------

	public TcSessionData(HttpServletRequest request, OauthCredentials oac) {
		loadTcParameters(request,oac);
		M_log.debug("Tc value: "+this.toString());
	}
	
	//Canvas (as well as other Learning Management Systems) may require more parameters than those listed as member variables.
	//To compensate for this, the member variable customValuesMap was created as well as the following constructor.
	//With this map available, custom LMS launch parameters can be stored in a TcSessionData object.
	public TcSessionData(HttpServletRequest request, OauthCredentials oac, HashMap<String, Object> customValuesMap) {
		loadTcParameters(request,oac);
		M_log.debug("Tc value: "+this.toString());
		this.customValuesMap = customValuesMap;
	}


	// Public methods -----------------------------------------------

	/**
	 * Returns true if the user has the given role (match is case sensitive)
	 */
	public boolean getHasRole(String role) {
		String[] roleArray = getUserRoleArray();
		if (roleArray != null) {
			for (int idx = 0; idx < roleArray.length; idx++) {
				if (role.equals(roleArray[idx])) {
					return true;
				}
			}
		}
		return false;
	}

	/**
	 * @return true if the user has role "Instructor"
	 */
	public boolean getIsInstructor() {
		return getHasRole("Instructor");
	}


	public void loadTcParameters(HttpServletRequest request, OauthCredentials oac) {

		setOauthCredentials(oac);
		setContextId(request.getParameter("context_id"));
		setContextLabel(request.getParameter("context_label"));
		setContextTitle(request.getParameter("context_title"));

		setMembershipsId(request.getParameter("ext_ims_lis_memberships_id"));
		setMembershipsUrl(request.getParameter("ext_ims_lis_memberships_url"));

		setSettingId(request.getParameter("ext_ims_lti_tool_setting_id"));
		setSettingUrl(request.getParameter("ext_ims_lti_tool_setting_url"));
		setSetting(request.getParameter("ext_ims_lti_tool_setting"));

		setLocale(request.getParameter("launch_presentation_locale"));
		setResourceLinkId(request.getParameter("resource_link_id"));
		setUserEmailAddress(request.getParameter("lis_person_contact_email_primary"));
		setUserId(request.getParameter("user_id"));
		setUserImageUrl(request.getParameter("user_image"));
		setUserNameFull(request.getParameter("list_person_name_full"));
		setUserRoles(request.getParameter("roles"));
		setUserSourceDid(request.getParameter("lis_person_sourcedid"));
		setCustomBrand(request.getParameter("custom_brand"));
	}

	public boolean matchTpId(String value) {
		return getId().equals(value);
	}

	public void setUserRoles(String value) {
		userRoles = value;
		if (value != null) {
			setUserRoleArray(value.split(","));
		}
	}

	// Private methods ----------------------------------------------

	private void setUserRoleArray(String[] value) {
		userRoleArray = value;
	}

}
